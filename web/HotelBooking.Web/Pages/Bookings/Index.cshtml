@page
@model HotelBooking.Web.Pages.Bookings.IndexModel
@{
    ViewData["Title"] = "Bookings";
    Layout = "_Layout";
}
@section Styles {
    <link rel="stylesheet" href="~/css/booking.css" asp-append-version="true" />
}

<div class="container-fluid px-4 py-4">
    <div class="booking-tabs">
        <div class="tab-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4><i class="fas fa-calendar-alt me-2"></i> Hotel Bookings</h4>
                    <div class="subtitle">Manage all your reservations</div>
                </div>
                <div class="d-none d-md-block">
                    <authorize-button module="Booking" action="create">
                        <a asp-page="Create" class="btn btn-light">
                            <i class="fas fa-plus me-1"></i> New Booking
                        </a>
                    </authorize-button>
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger mx-3 mt-3" role="alert">
                @Model.ErrorMessage
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mx-3 mt-3" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mx-3 mt-3" role="alert">
                @TempData["ErrorMessage"]
            </div>
        }

        <ul class="nav nav-tabs" id="bookingTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab">
                    All Bookings
                    <span class="tab-badge">@Model.Bookings.Count()</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">
                    Pending
                    <span class="tab-badge">@Model.Bookings.Count(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="confirmed-tab" data-bs-toggle="tab" data-bs-target="#confirmed" type="button" role="tab">
                    Confirmed
                    <span class="tab-badge">@Model.Bookings.Count(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="checkedin-tab" data-bs-toggle="tab" data-bs-target="#checkedin" type="button" role="tab">
                    Checked In
                    <span class="tab-badge">@Model.Bookings.Count(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="checkedout-tab" data-bs-toggle="tab" data-bs-target="#checkedout" type="button" role="tab">
                    Checked Out
                    <span class="tab-badge">@Model.Bookings.Count(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="cancelled-tab" data-bs-toggle="tab" data-bs-target="#cancelled" type="button" role="tab">
                    Cancelled
                    <span class="tab-badge">@Model.Bookings.Count(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled)</span>
                </button>
            </li>
        </ul>

        <div class="tab-content" id="bookingTabContent">
            <!-- All Bookings Tab -->
            <div class="tab-pane fade show active" id="all" role="tabpanel">
                @{
                    var allBookings = Model.Bookings;
                    if (!allBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-calendar-times"></i> 
                            </div>
                            <h5>No bookings found</h5>
                            <p>There are no bookings yet.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in allBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending ||
                                            booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed ||
                                            booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Edit" asp-route-id="@booking.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Confirm" asp-route-id="@booking.Id" class="btn-action btn-confirm">
                                                    <i class="fas fa-circle-check me-1"></i> Confirm
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkin" data-bs-toggle="modal" data-bs-target="#checkInModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Check In
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkout" data-bs-toggle="modal" data-bs-target="#checkOutModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Check Out
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-invoice" data-bs-toggle="modal" data-bs-target="#createInvoiceModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-receipt me-1"></i> Create Invoice
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled &&
                                            booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="delete">
                                                <button class="btn-action btn-cancel" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            </authorize-button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Pending Tab -->
            <div class="tab-pane fade" id="pending" role="tabpanel">
                @{
                    var pendingBookings = Model.Bookings.Where(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending);
                    if (!pendingBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-calendar-times"></i> 
                            </div>
                            <h5>No pending bookings</h5>
                            <p>There are no pending bookings at the moment.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in pendingBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Edit" asp-route-id="@booking.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Confirm" asp-route-id="@booking.Id" class="btn-action btn-confirm">
                                                    <i class="fas fa-circle-check me-1"></i> Confirm
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkin" data-bs-toggle="modal" data-bs-target="#checkInModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Check In
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkout" data-bs-toggle="modal" data-bs-target="#checkOutModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Check Out
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-invoice" data-bs-toggle="modal" data-bs-target="#createInvoiceModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-receipt me-1"></i> Create Invoice
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled &&
                                            booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="delete">
                                                <button class="btn-action btn-cancel" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            </authorize-button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Confirmed Tab -->
            <div class="tab-pane fade" id="confirmed" role="tabpanel">
                @{
                    var confirmedBookings = Model.Bookings.Where(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed);
                    if (!confirmedBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-calendar-check"></i> 
                            </div>
                            <h5>No confirmed bookings</h5>
                            <p>There are no confirmed bookings at the moment.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in confirmedBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Edit" asp-route-id="@booking.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Confirm" asp-route-id="@booking.Id" class="btn-action btn-confirm">
                                                    <i class="fas fa-circle-check me-1"></i> Confirm
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkin" data-bs-toggle="modal" data-bs-target="#checkInModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Check In
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkout" data-bs-toggle="modal" data-bs-target="#checkOutModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Check Out
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-invoice" data-bs-toggle="modal" data-bs-target="#createInvoiceModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-receipt me-1"></i> Create Invoice
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled &&
                                            booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="delete">
                                                <button class="btn-action btn-cancel" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            </authorize-button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Checked In Tab -->
            <div class="tab-pane fade" id="checkedin" role="tabpanel">
                @{
                    var checkedInBookings = Model.Bookings.Where(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn);
                    if (!checkedInBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-door-open"></i> 
                            </div>
                            <h5>No checked-in guests</h5>
                            <p>There are no guests currently checked in.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in checkedInBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Edit" asp-route-id="@booking.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Confirm" asp-route-id="@booking.Id" class="btn-action btn-confirm">
                                                    <i class="fas fa-circle-check me-1"></i> Confirm
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkin" data-bs-toggle="modal" data-bs-target="#checkInModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Check In
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkout" data-bs-toggle="modal" data-bs-target="#checkOutModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Check Out
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-invoice" data-bs-toggle="modal" data-bs-target="#createInvoiceModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-receipt me-1"></i> Create Invoice
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled &&
                                   booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="delete">
                                                <button class="btn-action btn-cancel" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            </authorize-button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Checked Out Tab -->
            <div class="tab-pane fade" id="checkedout" role="tabpanel">
                @{
                    var checkedOutBookings = Model.Bookings.Where(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut);
                    if (!checkedOutBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-door-closed"></i> 
                            </div>
                            <h5>No completed stays</h5>
                            <p>There are no completed stays yet.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in checkedOutBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed ||
                                           booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Edit" asp-route-id="@booking.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Pending)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <a asp-page="Confirm" asp-route-id="@booking.Id" class="btn-action btn-confirm">
                                                    <i class="fas fa-circle-check me-1"></i> Confirm
                                                </a>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Confirmed)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkin" data-bs-toggle="modal" data-bs-target="#checkInModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Check In
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedIn)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-checkout" data-bs-toggle="modal" data-bs-target="#checkOutModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Check Out
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="edit">
                                                <button class="btn-action btn-invoice" data-bs-toggle="modal" data-bs-target="#createInvoiceModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-receipt me-1"></i> Create Invoice
                                                </button>
                                            </authorize-button>
                                        }
                                        @if (booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled &&
                                   booking.Status != Domain.AggregateModels.BookingAggregate.BookingStatus.CheckedOut)
                                        {
                                            <authorize-button module="Booking" action="delete">
                                                <button class="btn-action btn-cancel" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@booking.Id" data-name="@booking.RoomName">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            </authorize-button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Cancelled Tab -->
            <div class="tab-pane fade" id="cancelled" role="tabpanel">
                @{
                    var cancelledBookings = Model.Bookings.Where(b => b.Status == Domain.AggregateModels.BookingAggregate.BookingStatus.Cancelled);
                    if (!cancelledBookings.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-ban"></i> 
                            </div>
                            <h5>No cancelled bookings</h5>
                            <p>There are no cancelled bookings.</p>
                        </div>
                    }
                    else
                    {
                        foreach (var booking in cancelledBookings)
                        {
                            <div class="booking-card">
                                <div class="booking-card-header">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="booking-id">#@booking.Id</div>
                                            <div class="booking-guest">@string.Join(", ", booking.Guests.Select(g => g.LastName))</div>
                                        </div>
                                        <span class="status-badge status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="booking-card-body">
                                    <div class="booking-info">
                                        <div class="info-item">
                                            <div class="info-label">Room</div>
                                            <div class="info-value">@booking.RoomName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Room Type</div>
                                            <div class="info-value">@booking.RoomTypeName</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-in</div>
                                            <div class="info-value">@booking.CheckInDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">EST Check-out</div>
                                            <div class="info-value">@booking.CheckOutDate.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-in</div>
                                            <div class="info-value">@booking.CheckInTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">ACT Check-out</div>
                                            <div class="info-value">@booking.CheckOutTime?.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Create At</div>
                                            <div class="info-value">@booking.CreatedAt.ToString("MMM dd")</div>
                                        </div>
                                        <div class="info-item">
                                            <div class="info-label">Duration</div>
                                            <div class="info-value">@((booking.CheckOutDate - booking.CheckInDate).Days) nights</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- Floating New Booking Button -->
<button class="new-booking-btn d-md-none" onclick="window.location.href='@Url.Page("Create")'">
    <i class="fas fa-plus"></i> 
</button>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 16px; border: none;">
            <div class="modal-header" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%); color: white; border-radius: 16px 16px 0 0;">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Cancellation
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 24px;">
                <p class="mb-0">Are you sure you want to cancel this booking? This action cannot be undone.</p>
            </div>
            <div class="modal-footer" style="border: none; padding: 16px 24px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: 12px;">Keep Booking</button>
                <form method="post" class="d-inline">
                    <input type="hidden" id="deleteId" name="id" />
                    <button type="submit" asp-page-handler="Cancel" class="btn btn-danger" style="border-radius: 12px;">
                        <i class="fas fa-times me-1"></i> Cancel Booking
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Check In Confirmation Modal -->
<div class="modal fade" id="checkInModal" tabindex="-1" aria-labelledby="checkInModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 16px; border: none;">
            <div class="modal-header" style="background: linear-gradient(135deg, #28a745 0%, #218838 100%); color: white; border-radius: 16px 16px 0 0;">
                <h5 class="modal-title" id="checkInModalLabel">
                    <i class="fas fa-sign-in-alt me-2"></i> Confirm Check In
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 24px;">
                <p class="mb-3">Are you sure you want to check in this room?</p>
                <div class="form-group">
                    <label for="checkInNotes" class="form-label">Notes</label>
                    <textarea class="form-control" id="checkInNotes" name="notes" rows="3" placeholder="Enter any additional notes..."></textarea>
                </div>
            </div>
            <div class="modal-footer" style="border: none; padding: 16px 24px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: 12px;">Cancel</button>
                <form method="post" class="d-inline">
                    <input type="hidden" id="checkInId" name="id" />
                    <input type="hidden" id="checkInNotesInput" name="notes" />
                    <button type="submit" asp-page-handler="CheckIn" class="btn btn-success" style="border-radius: 12px;" onclick="setCheckInNotes()">
                        <i class="fas fa-sign-in-alt me-1"></i> Confirm Check In
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Check Out Confirmation Modal -->
<div class="modal fade" id="checkOutModal" tabindex="-1" aria-labelledby="checkOutModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 16px; border: none;">
            <div class="modal-header" style="background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%); color: #212529; border-radius: 16px 16px 0 0;">
                <h5 class="modal-title" id="checkOutModalLabel">
                    <i class="fas fa-sign-out-alt me-2"></i> Confirm Check Out
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 24px;">
                <p class="mb-3">Are you sure you want to check out this room?</p>
            </div>
            <div class="modal-footer" style="border: none; padding: 16px 24px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: 12px;">Cancel</button>
                <form method="post" class="d-inline">
                    <input type="hidden" id="checkOutId" name="id" />
                    <button type="submit" asp-page-handler="CheckOut" class="btn btn-warning" style="border-radius: 12px;">
                        <i class="fas fa-sign-out-alt me-1"></i> Confirm Check Out
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Confirm Create Invoice Modal-->
<div class="modal fade" id="createInvoiceModal" tabindex="-1" aria-labelledby="createInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 16px; border: none;">
            <div class="modal-header" style="background: linear-gradient(135deg, #007bff 0%, #0056b3 100%); color: white; border-radius: 16px 16px 0 0;">
                <h5 class="modal-title" id="createInvoiceModalLabel">
                    <i class="fas fa-file-invoice-dollar me-2"> </i> Confirm Invoice Creation
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"> </button>
            </div>
            <div class="modal-body" style="padding: 24px;">
                <p>Please confirm you want to create an invoice for this booking.</p>
                <div class="mb-3">
                    <label for="invoiceNotes" class="form-label fw-semibold">Notes</label>
                    <textarea class="form-control rounded-3 shadow-sm" id="invoiceNotes" name="Notes" rows="3" placeholder="Enter any additional notes..."></textarea>
                </div>
            </div>
            <div class="modal-footer" style="border: none; padding: 16px 24px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: 12px;"> Cancel </button>
                <form method="post" class="d-inline">
                    <input type="hidden" id="createInvoiceBookingId" name="bookingId" />
                    <input type="hidden" id="invoiceNotesInput" name="notes" />
                    <button type="submit" asp-page-handler="CreateInvoice" class="btn btn-primary" style="border-radius: 12px;" onclick="setInvoiceNotes()">
                        <i class="fas fa-plus me-1"> </i> Create Invoice
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/bookings/index.js"></script>
}
