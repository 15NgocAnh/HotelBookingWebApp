@page
@model HotelBooking.Web.Pages.Bookings.CalendarModel
@{
    ViewData["Title"] = "Booking Calendar";
    Layout = "_Layout";
}

<div class="container-fluid px-4 py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4><i class="fas fa-calendar-alt me-2"></i> Booking Calendar</h4>
            <div class="subtitle">View and manage bookings in calendar format</div>
        </div>
        <div>
            <authorize-button module="Booking" action="create">
                <a asp-page="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>New Booking
                </a>
            </authorize-button>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div id="calendar"></div>
        </div>
    </div>
</div>

<!-- Booking Details Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Booking Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="booking-details">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="info-group">
                                <label>Room:</label>
                                <span id="modalRoomName"></span>
                            </div>
                            <div class="info-group">
                                <label>Room Type:</label>
                                <span id="modalRoomType"></span>
                            </div>
                            <div class="info-group">
                                <label>Check-in Date:</label>
                                <span id="modalCheckIn"></span>
                            </div>
                            <div class="info-group">
                                <label>Check-out Date:</label>
                                <span id="modalCheckOut"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <label>Status:</label>
                                <span id="modalStatus"></span>
                            </div>
                            <div class="info-group">
                                <label>Guest Name:</label>
                                <span id="modalGuestName"></span>
                            </div>
                            <div class="info-group">
                                <label>Phone:</label>
                                <span id="modalPhone"></span>
                            </div>
                            <div class="info-group">
                                <label>Email:</label>
                                <span id="modalEmail"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div id="modalActions">
                    <!-- Action buttons will be dynamically added here -->
                </div>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Check In Modal -->
<div class="modal fade" id="checkInModal" tabindex="-1" aria-labelledby="checkInModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="checkInModalLabel">Check In</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="checkInForm" method="post">
                    <input type="hidden" id="checkInBookingId" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Room</label>
                        <input type="text" class="form-control" id="checkInRoomName" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Check-in Time</label>
                        <input type="datetime-local" class="form-control" name="checkInTime" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Notes</label>
                        <textarea class="form-control" name="notes" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="submitCheckIn()">Check In</button>
            </div>
        </div>
    </div>
</div>

<!-- Check Out Modal -->
<div class="modal fade" id="checkOutModal" tabindex="-1" aria-labelledby="checkOutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="checkOutModalLabel">Check Out</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="checkOutForm" method="post">
                    <input type="hidden" id="checkOutBookingId" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Room</label>
                        <input type="text" class="form-control" id="checkOutRoomName" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Check-out Time</label>
                        <input type="datetime-local" class="form-control" name="checkOutTime" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Additional Charges</label>
                        <input type="number" class="form-control" name="additionalCharges" value="0" min="0" step="0.01" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Notes</label>
                        <textarea class="form-control" name="notes" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" onclick="submitCheckOut()">Check Out</button>
            </div>
        </div>
    </div>
</div>

<!-- Booking Context Menu -->
<div class="context-menu" id="bookingContextMenu">
    <ul class="list-unstyled mb-0">
        <li class="context-menu-item" id="viewBookingItem">
            <a href="#" class="text-decoration-none">
                <i class="fas fa-eye me-2"></i>Xem chi tiết
            </a>
        </li>
        <li class="context-menu-item" id="editBookingItem">
            <a href="#" class="text-decoration-none">
                <i class="fas fa-edit me-2"></i>Chỉnh sửa
            </a>
        </li>
        <li class="context-menu-item" id="checkInItem">
            <a href="#" class="text-decoration-none">
                <i class="fas fa-sign-in-alt me-2"></i>Check In
            </a>
        </li>
        <li class="context-menu-item" id="checkOutItem">
            <a href="#" class="text-decoration-none">
                <i class="fas fa-sign-out-alt me-2"></i>Check Out
            </a>
        </li>
    </ul>
</div>

@section Styles {
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css' rel='stylesheet' />
    <style>
        .fc-event {
            cursor: pointer;
        }
        .booking-details .info-group {
            margin-bottom: 1rem;
        }
        .booking-details .info-group label {
            font-weight: 600;
            margin-right: 0.5rem;
            color: #6c757d;
        }
        .fc-event.pending {
            background-color: #ffc107;
            border-color: #ffc107;
        }
        .fc-event.confirmed {
            background-color: #0dcaf0;
            border-color: #0dcaf0;
        }
        .fc-event.checked-in {
            background-color: #198754;
            border-color: #198754;
        }
        .fc-event.checked-out {
            background-color: #6c757d;
            border-color: #6c757d;
        }
        .fc-event.cancelled {
            background-color: #dc3545;
            border-color: #dc3545;
        }
        .context-menu {
            display: none;
            position: fixed;
            z-index: 1000;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            padding: 8px 0;
            min-width: 150px;
        }
        .context-menu-item {
            padding: 8px 16px;
            cursor: pointer;
        }
        .context-menu-item:hover {
            background-color: #f8f9fa;
        }
        .context-menu-item a {
            color: #333;
            display: block;
        }
    </style>
}

@section Scripts {
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js'></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: @Html.Raw(Json.Serialize(Model.BookingEvents)),
                eventClick: function(info) {
                    showBookingDetails(info.event);
                },
                eventContextMenu: function(info) {
                    showBookingContextMenu(info.event, info.jsEvent);
                },
                eventDidMount: function(info) {
                    // Add tooltip
                    $(info.el).tooltip({
                        title: info.event.title,
                        placement: 'top',
                        trigger: 'hover',
                        container: 'body'
                    });
                }
            });
            calendar.render();

            function showBookingDetails(event) {
                const booking = event.extendedProps;
                
                // Update modal content
                document.getElementById('modalRoomName').textContent = booking.roomName;
                document.getElementById('modalRoomType').textContent = booking.roomType;
                document.getElementById('modalCheckIn').textContent = booking.checkInDate;
                document.getElementById('modalCheckOut').textContent = booking.checkOutDate;
                document.getElementById('modalStatus').textContent = booking.status;
                document.getElementById('modalGuestName').textContent = booking.guestName;
                document.getElementById('modalPhone').textContent = booking.phone;
                document.getElementById('modalEmail').textContent = booking.email;

                // Update modal actions
                const actionsContainer = document.getElementById('modalActions');
                actionsContainer.innerHTML = '';

                if (booking.status === 'Pending') {
                    addActionButton('Edit', `/Bookings/Edit?id=${booking.id}`, 'btn-primary');
                    addActionButton('Confirm', `/Bookings/Confirm?id=${booking.id}`, 'btn-success');
                } else if (booking.status === 'Confirmed') {
                    addActionButton('Edit', `/Bookings/Edit?id=${booking.id}`, 'btn-primary');
                    addActionButton('Check In', '#', 'btn-info', 'checkInModal', booking.id, booking.roomName);
                } else if (booking.status === 'CheckedIn') {
                    addActionButton('Check Out', '#', 'btn-warning', 'checkOutModal', booking.id, booking.roomName);
                }

                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('bookingModal'));
                modal.show();
            }

            function addActionButton(text, href, className, modalId, bookingId, roomName) {
                const button = document.createElement('a');
                button.href = href;
                button.className = `btn ${className} me-2`;
                button.textContent = text;

                if (modalId) {
                    button.setAttribute('data-bs-toggle', 'modal');
                    button.setAttribute('data-bs-target', `#${modalId}`);
                    button.setAttribute('data-id', bookingId);
                    button.setAttribute('data-name', roomName);
                }

                document.getElementById('modalActions').appendChild(button);
            }

            function submitCheckIn() {
                const form = document.getElementById('checkInForm');
                const formData = new FormData(form);
                
                fetch('/Bookings/Calendar?handler=CheckIn', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: formData
                })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to check in');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while checking in');
                });
            }

            function submitCheckOut() {
                const form = document.getElementById('checkOutForm');
                const formData = new FormData(form);
                
                fetch('/Bookings/Calendar?handler=CheckOut', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: formData
                })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to check out');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while checking out');
                });
            }

            // Update modal handlers
            const checkInModal = document.getElementById('checkInModal');
            if (checkInModal) {
                checkInModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const bookingId = button.getAttribute('data-id');
                    const roomName = button.getAttribute('data-name');
                    
                    document.getElementById('checkInBookingId').value = bookingId;
                    document.getElementById('checkInRoomName').value = roomName;
                });
            }

            const checkOutModal = document.getElementById('checkOutModal');
            if (checkOutModal) {
                checkOutModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const bookingId = button.getAttribute('data-id');
                    const roomName = button.getAttribute('data-name');
                    
                    document.getElementById('checkOutBookingId').value = bookingId;
                    document.getElementById('checkOutRoomName').value = roomName;
                });
            }

            function showBookingContextMenu(event, jsEvent) {
                jsEvent.preventDefault();
                
                const menu = document.getElementById('bookingContextMenu');
                const viewItem = document.getElementById('viewBookingItem');
                const editItem = document.getElementById('editBookingItem');
                const checkInItem = document.getElementById('checkInItem');
                const checkOutItem = document.getElementById('checkOutItem');
                
                // Show/hide menu items based on booking status
                const status = event.extendedProps.status;
                viewItem.style.display = 'block';
                editItem.style.display = status === 'Pending' ? 'block' : 'none';
                checkInItem.style.display = status === 'Confirmed' ? 'block' : 'none';
                checkOutItem.style.display = status === 'CheckedIn' ? 'block' : 'none';
                
                // Position the menu
                menu.style.display = 'block';
                menu.style.left = jsEvent.pageX + 'px';
                menu.style.top = jsEvent.pageY + 'px';
                
                // Add click handlers
                viewItem.onclick = () => {
                    showBookingDetails(event);
                    hideContextMenu();
                };
                
                editItem.onclick = () => {
                    window.location.href = `/Bookings/Edit?id=${event.extendedProps.id}`;
                    hideContextMenu();
                };
                
                checkInItem.onclick = () => {
                    const checkInModal = new bootstrap.Modal(document.getElementById('checkInModal'));
                    document.getElementById('checkInBookingId').value = event.extendedProps.id;
                    document.getElementById('checkInRoomName').value = event.extendedProps.roomName;
                    checkInModal.show();
                    hideContextMenu();
                };
                
                checkOutItem.onclick = () => {
                    const checkOutModal = new bootstrap.Modal(document.getElementById('checkOutModal'));
                    document.getElementById('checkOutBookingId').value = event.extendedProps.id;
                    document.getElementById('checkOutRoomName').value = event.extendedProps.roomName;
                    checkOutModal.show();
                    hideContextMenu();
                };
            }

            function hideContextMenu() {
                const menu = document.getElementById('bookingContextMenu');
                menu.style.display = 'none';
            }

            // Hide context menu when clicking outside
            document.addEventListener('click', function(event) {
                const menu = document.getElementById('bookingContextMenu');
                if (!menu.contains(event.target)) {
                    hideContextMenu();
                }
            });
        });
    </script>
} 